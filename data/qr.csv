id;question;answer;domain_id
1;What are the main differences between Java and C++?;"Everything is an object in Java( Single root hierarchy as everything gets derived from java.lang.Object). Java does not have all the complicated aspects of C++ ( For ex: Pointers, templates, unions, operator overloading, structures etc..)  The Java language promoters initially said ""No pointers!"", but when many programmers questioned how you can work without pointers, the promoters began saying ""Restricted pointers."" You can make up your mind whether it’s really a pointer or not. In any event, there’s no pointer arithmetic. There are no destructors in Java. (automatic garbage collection),  Java does not support conditional compile (#ifdef/#ifndef type). Thread support is built into java but not in C++. Java does not support default arguments. There’s no scope resolution operator :: in Java. Java uses the dot for everything, but can get away with it since you can define elements only within a class. Even the method definitions must always occur within a class, so there is no need for scope resolution there either. There’s no ""goto "" statement in Java. Java doesn’t provide multiple inheritance (MI), at least not in the same sense that C++ does. Exception handling in Java is different because there are no destructors. Java has method overloading, but no operator overloading. The String class does use the + and += operators to concatenate strings and String expressions use automatic type conversion, but that’s a special built-in case. Java is interpreted for the most part and hence platform independent";2
2;Describe the principles of OOPS;There are three main principals of oops which are called Polymorphism, Inheritance and Encapsulation;2
3;Explain the Encapsulation principle;Encapsulation is a process of binding or wrapping the data and the codes that operates on the data into a single entity. This keeps the data safe from outside interface and misuse. One way to think about encapsulation is as a protective wrapper that prevents code and data from being arbitrarily accessed by other code defined outside the wrapper.  ;2
4;Explain the Inheritance principle.;Inheritance is the process by which one object acquires the properties of another object.  ;2
5;Explain the Polymorphism principle;"The meaning of Polymorphism is something like one name many forms. Polymorphism enables one entity to be used as as general category for different types of actions. The specific action is determined by the exact nature of the situation. The concept of polymorphism can be explained as ""one interface, multiple methods""";2
6;Explain the different forms of Polymorphism.;"From a practical programming viewpoint, polymorphism exists in three distinct forms in Java:  •	Method overloading  •	Method overriding through inheritance  •	Method overriding through the Java interface";2
7;What is difference between overloading and overriding?;- a) In overloading, there is a relationship between methods available in the same class whereas in overriding, there is relationship between a superclass method and subclass method.  b) Overloading does not block inheritance from the superclass whereas o;2
8;Can a private method of a superclass be declared within a subclass?;Sure. A private field or method or inner class belongs to its declared class and hides from its subclasses.  There is no way for private stuff to have a runtime overloading or overriding (polymorphism) features.;2
9;The toString ( ) method in the user-defined exception class is overridden.;True;2
10;What if the main method is declared as private? ;"The program compiles properly but at runtime it will give ""Main method not public."" message.";2
11;What if I do not provide the String array as the argument to the method?;"Program compiles. But at runtime throws an error ""NoSuchMethodError"".";2
12;Can an application have multiple classes having main method?;Yes. While starting the application we mention the class name to be run. The JVM will look for the main method only in the class whose name you have mentioned. Hence there is not conflict amongst the multiple classes having main method.;2
13;Can I have multiple main methods in the same class?;We can have multiple overloaded main methods but there can be only one main method with the following signature : public static void main(String[] args) {};2
14;Expain the reason for each keyword of public static void main(String args[])?;public- main(..) is the first method called by java environment when a program is executed so it has to accessible from java environment. Hence the access specifier has to be public. static: Java environment should be able to call this method without creating an instance of the class , so this method must be declared as static. void: main does not return anything so the return type must be void The argument String indicates the argument type which is given at the command line and arg is an array for string given during command line.;2
15;If you’re overriding the method equals() of an object, which other method you might also consider?;hashCode();2
16;What’s the difference between == and equals method? ;equals checks for the content of the string objects while == checks for the fact that the two String objects point to same memory location ie they are same references.;2
17;How would you make a copy of an entire Java object with its state?;Have this class implement Cloneable interface and call its method clone().;2
18;Explain working of Java Virtual Machine (JVM)?;JVM is an abstract computing machine like any other real computing machine which first converts .java file into .class file by using Compiler (.class is nothing but byte code file.) and Interpreter reads byte codes.;2
19;What gives java it’s “write once and run anywhere” nature?;All Java programs are compiled into class files that contain bytecodes. These byte codes can be run in any platform and hence java is said to be platform independent.;2
20;Can I import same package/class twice? Will the JVM load the package twice at runtime?;One can import the same package or same class multiple times. Neither compiler nor JVM complains anything about it. And the JVM will internally load the class only once no matter how many times you import the same class. ;2
21;Is JVM a compiler or an interpreter?;Interpreter;2
22;What is the difference between public, private, protected and default Access Specifiers?;Access specifiers are keywords that determine the type of access to the member of a class. These keywords are for allowing privileges to parts of a program such as functions and variables. These are:  • Public : accessible to all classes • Protected : accessible to the classes within the same package and any subclasses. • Private : accessible only to the class to which they belong • Default : accessible to the class to which they belong and to subclasses within the same package;2
23;Can a top-level class be private or protected?;"No. A top-level class cannot be private or protected. It can have either ""public"" or no modifier. If it does not have a modifier it is supposed to have a default access. If a top level class is declared as private/protected the compiler will complain that the ""modifier private is not allowed here”. ";2
24;If a class is declared without any access modifiers, where may the class be accessed?;A class that is declared without any access modifiers is said to have package or default access. This means that the class can only be accessed by other classes and interfaces that are defined within the same package.;2
25;If a method is declared as protected, where may the method be accessed? ;A protected method may only be accessed by classes or interfaces of the same package or by subclasses of the class in which it is declared. ;2
26;What is the purpose of the Runtime class?;The purpose of the Runtime class is to provide access to the Java runtime system. It returns the runtime information like memory availability. * Runtime.freeMemory() --> Returns JVM Free Memory * Runtime.maxMemory() --> Returns the maximum amount of memory that the JVM will attempt to use. It also helps to run the garbage collector * Runtime.gc();2
27;What is the purpose of the System class?;The purpose of the System class is to provide access to system resources.;2
28;In System.out.println(), what is System, out and println?;System is a predefined final class, out is a PrintStream object and println is a built-in overloaded method in the out object.;2
29;What is the difference between final, finally and finalize? What do you understand by the java final keyword?;o final - declare constant o finally - handles exception o finalize - helps in garbage collection;2
30;What is finalize() method?;finalize () method is used just before an object is destroyed and can be called just prior to garbage collection.;2
31;Can an object's finalize() method be invoked while it is reachable?;An object's finalize() method cannot be invoked by the garbage collector while the object is still reachable. However, an object's finalize() method may be invoked by other objects.;2
32;Can an unreachable object become reachable again?;An unreachable object may become reachable again. This can happen when the object's finalize() method is invoked and the object performs an operation which causes it to become accessible to reachable object.;2
33;What is the purpose of finalization?;The purpose of finalization is to give an unreachable object the opportunity to perform any cleanup, before the object gets garbage collected. For example, closing an opened database Connection. ;2
34;"What does the ""final"" keyword mean in front of a variable? A method? A class? ";"FINAL for a variable : value is constant  FINAL for a method : cannot be overridden  FINAL for a class : cannot be derived  A final variable cannot be reassigned,  but it is not constant. For instance,  final StringBuffer x = new StringBuffer()  x.append(""hello""); ";2
35;Can Java Interface be declared final? Justify your answer?;No, as implementation of methods of interface is in a different class and works in a dynamic polymorphism paradigm and variable of type interface will have to be initialized by a different class, which is against the rules of final keyword.;2
36;What is implicit casting?;"Implicit casting is the process of simply assigning one entity to another without any transformation guidance to the compiler. This type of casting is not permitted in all kinds of transformations and may not work for all scenarios. Example int i = 1000; long j = i; //Implicit casting";2
37;What is explicit casting?;"Explicit casting in the process in which the complier are specifically informed to about transforming the object. Example long i = 700.20; int j = (int) i; //Explicit casting";2
38;What do you understand by downcasting?;The process of Downcasting refers to the casting from a general to a more specific type, i.e. casting down the hierarchy;2
39;What is the functionality of instanceOf() ?;instanceOf opertaor is used to check whether an object can be cast to a specific type without throwing ClassCastException.;2
40;How do you know if an explicit object casting is needed?;"If you assign a superclass object to a variable of a subclass’s data type, you need to do explicit casting. For example:  Object a;Customer b; b = (Customer) a; When you assign a subclass to a variable having a supeclass type, the casting is performed automatically. ";2
41;What if I write static public void instead of public static void?;Program compiles and runs properly. ;2
42;When is static variable loaded? Is it at compile time or runtime? When exactly a static block is loaded in Java?;Static variable are loaded when classloader brings the class to the JVM. It is not necessary that an object has to be created. Static variables will be allocated memory space when they have been loaded. The code in a static block is loaded/executed only once i.e. when the class is first initialized. A class can have any number of static blocks. Static block is not member of a class, they do not have a return statement and they cannot be called directly. Cannot contain this or super. They are primarily used to initialize static fields.;2
43;Can a method be static and synchronized?;A static method can be synchronized. If you do so, the JVM will obtain a lock on the java.lang.  Class instance associated with the object. It is similar to saying:             synchronized(XYZ.class) {             };2
44;What happens to the static fields of a class during serialization?;There are three exceptions in which serialization doesn’t necessarily read and write to the stream. These are 1. Serialization ignores static fields, because they are not part of any particular state. 2. Base class fields are only handled if the base class itself is serializable. 3. Transient fields.;2
45;What is static in java?;A static variable is associated with the class as a whole rather than with specific instances of a class. Each object will share a common copy of the static variables i.e. there is only one copy per class, no matter how many objects are created from it. Class variables or static variables are declared with the static keyword in a class. These are declared outside a class and stored in static memory. Class variables are mostly used for constants. Static variables are always called by the class name. This variable is created when the program starts and gets destroyed when the programs stops. The scope of the class variable is same an instance variable. Its initial value is same as instance variable and gets a default value when its not initialized corresponding to the data type. Similarly, a static method is a method that belongs to the class rather than any object of the class and doesn't apply to an object or even require that any objects of the class have been instantiated.      Static methods are implicitly final, because overriding is done based on the type of the object, and static methods are attached to a class, not an object. A static method in a superclass can be shadowed by another static method in a subclass, as long as the original method was not declared final. However, you can't override a static method with a non-static method. In other words, you can't change a static method into an instance method in a subclass. Non-static variables take on unique values with each object instance.;2
46;Why are you interested in this position?;Having worked within the financial services sector for five years, I have gained an appreciation for the power of client-facing roles in terms of my professional development and organizational impact. As a relationship manager in your firm, I envision bringing my ability to resourcefully optimize any given client’s portfolio as the best way I can help your company’s five-year strategic goal of retaining its client base at a 50% rate. I have done this in the past in X capacity while working for my previous employer and am confident that I can help you accelerate your current goals while growing my career.;5
47;Tell me about yourself.;I have been a sales manager for X years, with experiences that include being able to lead a sales force toward the accomplishment of aggressive goals. In light of your organization’s core strength in hiring the brightest salespeople, I would know exactly how to coach them to sell both new and legacy products in new markets quickly. While at Company X, I created the gold standard incentive program that resulted in helping us sell-in potential charge volume that exceeded our goals by 20% in both travel expenses and daily expenses. Prior to that, I worked at X where I completed X, etc. Side note: figure out the assets of the hiring firm or its needs and tailor your response accordingly.;5
48;Why are you leaving your current job?;My business unit started with 50 full-time employees and today it has 10. While this reduction in personnel enabled me to showcase my ability to produce results with limited resources in an organization where management has turned over, I am interested in transitioning to an organization like yours where there is growth potential. For example, in my current role I managed to acquire 100K clients with only one other sales manager and a dwindling budget. In your company, I would be managing a team of 20 sales managers, where I stand to make a significant impact not only for your firm but on the firm’s market share.;5
49;What do you know about the company?;Your firm competes with firm A, firm B, and firm C in the U.S. My understanding is that you are better positioned in this area vs. firms A, B, or C. Meanwhile, firms B and C bring these strengths to the table.  Given my skill set, I know that I can help you optimize your strength in this and offset the strengths that firms B and C plan to invest more heavily in during 2014.  *Side note: the point is to be specific in how you’d use this information to drive results.;5
50;Pouvez-vous me parler de vous ?;En d’autres termes, votre interlocuteur vous demande de vous présenter, professionnellement parlant. L’exercice n’est pas compliqué si ce n’est qu’il doit suivre certaines règles.  Veillez à rester synthétique et ne pas monopoliser la parole plus de quelques minutes. Vous devez donc être précis en un délai assez court : pour cela, ne parlez que des expériences en lien direct avec le poste proposé.;6
51;Pourquoi avez-vous quitté votre dernier poste ?;Et sous-entendu : Que pensez-vous de la dernière entreprise pour laquelle vous avez travaillé ?  Le but ici n’est pas de critiquer votre ancien emploi ou entreprise. En étant positif, vous pourrez exposer brièvement les raisons de votre départ. Les recruteurs recherchent des candidats positifs, loyaux et aptes au travail d’équipe.  Cette question rejoint souvent la précédente. L’objectif est de voir ce que vous avez retiré de votre précédente expérience, quel est votre état d’esprit vis-à-vis de votre ancienne structure, de vos anciens collègues et employeurs. Les recruteurs ont besoin de voir si pouvez rester concentré(e) sur ce que cet ancien poste vous a apporté de bénéfique.;6
52;Quels sont vos succès / échecs ?;Il s’agit là de succès ou échecs professionnels. Pour les succès, cela peut aller de l’obtention d’un poste que vous souhaitiez particulièrement à la réussite d’un projet important. Quant aux échecs, l’important est de montrer comment vous les avez surmontés.  Veillez pour chacun des évènements à apporter des arguments précis, idéalement chiffrés.;6
53;Quels sont vos qualités et vos défauts ?;Répondez honnêtement à la question. Sans devenir votre pire critique, n’allez pas jusqu’à dire que vous n’avez pas de défaut et faire votre propre apologie. Vous devez montrer au recruteur que vous vous connaissez bien et que vous êtes sincère. Chacune de vos réponse doit être argumentée d’exemples. Choisissez des exemples professionnels et pour vos défauts, montrez comment vous travaillez à vous améliorer.  Par exemple, pour faire face à une gestion de projets toujours plus nombreux et améliorer votre gestion du temps, vous lisez certains ouvrages ou revues (à citer)… Évitez de mentir ou de citer un faux défaut (« je m’investis trop professionnellement »), le recruteur n’apprécierait pas la tentative de supercherie.  Si votre interlocuteur vous demande qualités et défauts : limitez-vous à une qualité et un défaut. Si la question ne porte que sur l’un ou l’autre, vous pouvez allez jusqu’à trois maximum.;6
54;Pourquoi voulez-vous travailler chez nous ?;Comme vous le savez, il est primordial de bien vous renseigner sur l’entreprise qui vous reçoit.  Ce sont ces informations qui vous permettront de répondre à cette question. Son activité, son histoire… sont autant d’éléments qui vous donnent envie de la rejoindre et leur connaissance vont démontrer votre intérêt au recruteur.;6
55;Que savez-vous sur notre activité ?;Cette question arrive généralement à la suite de la n°5 : vous avez montré que vous connaissiez un minimum l’entreprise, assez pour être intéressé(e). Du coup, le recruteur veut creuser plus loin : que savez-vous réellement à part les quelques informations de leur page d’accueil du site ? Votre intérêt est-il réel ou feint ?  C’est à ce moment que vous devez prouver que vous êtes réellement intéressé(e) et que vous avez recherché de l’information pour votre entretien. C’est aussi l’occasion de poser une question si un élément ne vous a pas paru assez clair suite à votre recherche.;6
56;Qu’attendez-vous de ce poste ?;A vous de jouer franc jeu : vous recherchez un poste au sein duquel vous pourrez vous épanouir professionnellement, avec une bonne dynamique d’équipe et un environnement de travail agréable ? Parlez-en ! Si la rémunération est un facteur important pour vous, cela peut aussi être le moment pour aborder le sujet.;6
57;Qu’est-ce qui vous motive pour ce poste ?;Pour répondre, vous pouvez réutiliser ce que vous aura appris le recruteur sur le poste au début de votre etretien d’ainsi que le descriptif des missions dans l’annonce. S’il s’agit d’un projet en général, ou encore d’un contexte particulier vous pouvez bien sûr le mentionner. À éviter cependant de mettre trop l’accent sur la rémunération, notamment si elle est le facteur principal de votre motivation.;6
58;Où vous voyez-vous dans cinq ans ?;Cette question sera posée dans le cadre d’un poste à pourvoir en CDI. Permettez-vous une certaine ambition, tout en étant réaliste. Vous pouvez parler de votre envie de gagner en responsabilités, de développer vos compétences…  S’il s’agit d’une société au sein de laquelle vous pouvez gravir régulièrement des échelons et que cela fait partie de vos motivations, vous pouvez l’évoquer. Si ce n’est pas le cas – et que cela vous convient – soyez plus modéré(e) dans l’expression de vos ambitions hiérarchiques et parlez donc de nouvelles missions et responsabilités.;6
59;Avez-vous des questions ?;"LA question inévitable, posée en fin d’entretien. Il se peut que vous ayez déjà posé vos questions pendant le reste de l’entretien ; cependant, lorsque que vous vous préparez pensez à garder une question pour la fin.  Que ce soit sur la société en elle-même, le groupe ou encore son site internet, il est préférable de terminer sur une question.";6
60;Quel est la différence entre une action et une obligation?;"•	Une action est un titre de participation dans une société de capitaux, potentiellement très rentable mais toujours risquée •	Une obligation est un titre de créance au rendement moindre mais sûr";7
61;Qu’est-ce qu’un produit dérivé ? citez 3 exemples;"•	Il s’agit tout simplement d’un instrument financier dont la valeur est basée sur les fluctuations d’un autre actif, le sous-jacent (underlying). Ce sous-jacent peut tout aussi bien être une action, un taux de change, une matière première, une obligation ou un indice •	Exemples : Forwards, les Futures, les Options et les Swaps";7
62;Qu’est-ce qu’une option ? quel est l’intérêt d’acheter une option ?;"•	L'option est un contrat qui donne le droit mais pas l'obligation d'exercer un droit que l'on a acquis auparavant. On distingue deux types d'options: o	Le call qui est un contrat donnant le droit, mais non l'obligation d'acheter un actif à un prix déterminé à l'avance, à une période fixée à l'avance. o	Le put qui est un contrat donnant le droit, mais non l'obligation de vendre un actif à un prix fixé à l'avance, à une période fixée à l'avance. •	L’avantage est la couverture de risque de baisse ou hausse du prix du sous-jacent";7
63;Quel sont les déterminants du prix d’une option ?;"•	Le cours du support •	La volatilité •	La relation entre le cours de l'action et le taux d'intérêt •	La relation entre le cours de l'action et le dividende.";7
64;Qu’ce qu’un future ? Qu’est-ce qui différencie un future d’une option ?;"•	Un future ou contrat à terme est un contrat standardisé négocié sur un marché organisé permettant de s'assurer ou de s'engager sur un prix pour une quantité déterminée d'un produit donné (le sous-jacent) à une date future. •	Contrairement aux futures qui ne se négocient que sur des marchés organisés, les options se négocient soit de gré à gré soit sur des marchés réglementés.";7
65;Qu’est-ce que un marché OTC ?;"•	Marché de négociation des produits dérivés : over the counter ";7
66;Quelle est la différence entre un certificat de dépôt et un billet de trésorerie ?;"•	Pour CD : Emetteur est Etablissements de crédit et Caisse des dépôts •	Pour BT : Emetteur est Entreprises autres que les établissements de crédit";7
67;En quoi consiste la réglementation EMIR et la réglementation FATCA ?;"•	EMIR vise à : est la traduction européenne des engagements pris lors du sommet du G20 de septembre 2009 pour faire décroître le risque systémique lié à l’utilisation massive des marchés dérivés OTC i.	La transparence accrue des marchés OTC via la création de référentiels centraux (trade repositories) ii.	La réduction du risque de contrepartie via l’obligation de compensation par le biais de contreparties centrales pour les dérivés standardisables •	Le Foreign Account Tax Compliance Act (FATCA) est un règlement du code fiscal des États-Unis qui oblige les banques des pays ayant accepté un accord avec le gouvernement des États-Unis à signer avec le Département du Trésor des États-Unis un accord dans lequel elles s'engagent à lui communiquer tous les comptes détenus par des citoyens américains";7
68;Qu’est-ce qu’un SWAP de taux ?;"•	Contrat de gré à gré qui permet d'échanger, sur la base d’un montant nominal, les flux d’intérêts calculés sur un taux fixe contre les flux d’intérêts calculés sur un taux variable";7
69;Donnez les rôles des différents offices (front/middle/back);"•	Systèmes d'information ""Front–Office"" : o	systèmes électronique de cotation et de négociation o	systèmes de tenue de position, souvent spécialisés pour certains instruments financiers (produits dérivés, trésorerie change, marchés actions, …) o	systèmes transverses: suivi des risques, prévision de liquidité. •	Le Middle-Office, très proche du Front, assure la validation et l'enrichissement des opérations négociées. •	Le Back-Office suit le traitement ""post–marché"" des opérations: confirmation, paiement, règlement – livraison, comptabilité.";7
70;Quelles sont les nouvelles mesures apportées par Bale III ?;"•	mise en place d’un ratio de liquidité pour les banques internationales ; •	mise en place d’un ratio dit « d’effet de levier » ; •	redéfinition des fonds propres (Tier 1 notamment) ; •	une révision de la couverture de certains risques ; •	la mise en place de mesures contra-cycliques. •	l'Ajustement de valeur de crédit (CVA) fait maintenant partie intégrante des règles prudentielles.";7
71;Quel est le rôle d’un broker ? d’un dépositaire ?d’un valorisateur ?;"•	Le Broker exécute sur le marché, les ordres demandés par les gérants et passés par les tables de négociation. Moyennant une commission, il s'assure de la bonne exécution des ordres, dans les meilleures conditions de marché dans l'intérêt du client. Les Brokers sont des prestataires de services d'investissement (PSI), et fournissent également à leurs clients des services de recherche ou d'analyse financière. •	La fonction du dépositaire est encadrée par l'AMF. Le dépositaire constitue un dossier précis sur le fonds comprenant les documents visés par l'AMF produits lors de la constitution de l'OPCVM (fiche d'agrément, prospectus, KID).  Il assure le règlement-livraison (R/L) et la conservation des actifs du fonds : tenue à jour des comptes titres et cash, réception et exécution des ordres de R/L, information du gérant des opérations sur titre (OST) impactant le portefeuille et traitement de ces OST, contrôle de la régularité des décisions de l'OPCVM. Il peut également assurer la gestion du passif du fonds (souscriptions et rachats). •	La Valorisateur calcule la valorisation des actifs détenus par le portefeuille et en déduit sa valeur liquidative (VL). Il peut également assurer le reporting, ainsi que le calcul, l'attribution et l'analyse de la performance du fonds.";7
72;Qu’est-ce qu’un dérivé de crédit ? citez 3 exemples de dérivé de crédit.;"•	Un dérivé de crédit est un produit financier à terme visant à transférer le risque de crédit d'un actif d'une contrepartie ""acheteuse de protection"" vers une contrepartie ""vendeuse de protection"" en échange d'une rétribution financière. La protection pourra être exercée lors de l'occurrence d'un événement de crédit sur l'actif sous-jacent du dérivé de crédit. •	Il existe de nombreux produits dérivés de crédit, du plus simple (CDS Single Name) au plus complexe (CDO Of CDO). o	CDS Single Name o	CDS sur indices appelés aussi ""indices non-tranchés"". o	CDO sur indices appelés aussi ""indices tranchés"".";7
73;"	Qu’est-ce que le risque de marché ? Citez un indicateur qui permet de mesurer ces risques ? Citez un inconvénient de cet indicateur ?";"•	Le risque de marché est le risque de perte liée à l’évolution de la valeur de marché d’un portefeuille d'instruments financiers. •	Le coefficient bêta est le coefficient clé du Modèle d'évaluation des actifs financiers (MEDAF). Il correspond à un rapport historique de la volatilité du prix d'un actif (par exemple le cours de bourse d'une action) sur celle des prix du marché en général (par exemple un indice boursier significatif). •	Il y a lieu toutefois de se méfier quelque peu de ces diverses relations arithmétiques. Elles supposent notamment d'admettre l'hypothèse que les marchés financiers sont parfaits (ce qui implique aucun coût de transaction) or en pratique il existe des frais de courtage, aucun différentiel de taxes (législations fiscales différentes d'une place à une autre), un même niveau de taux de prêt et d'emprunt pour tous les investisseurs (or ces taux varient dans le temps, dans l'espace, en fonction de chaque investisseur et ne sont pas identiques l'un l'autre) mais aussi que l'écart type des rendements passés est une mesure du risque.";7
74;Donner la commande permettant de visualiser les processus en cours;ps;9
75;Donner le commander permettant de visualiser le nombre de lignes d’un fichier;wc -l;9
76;Donner la commande permettant de connaitre le répertoire courant;pwd;9
77;Donner la commande permettant de trouver le répertoire nommé « Mon_Repertoire »;find / -type d -name 'Mon_Repertoire';9
78;Donner la commande permettant de visualiser la liste des fichiers;ls;9
79;Donner la commande permettant d’obtenir de l’aide sur la commande « passwd »;man passwd;9
80;Donner la commande permettant de rechercher un fichier au niveau d’une chaine de caractère donnée;grep;9
81;Donner 3 commandes permettant de visualiser un fichier;vi, cat, tail;9
82;Donner une commande permettant d’éditer un fichier;vi;9
